<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Product Brief</title>
    <description>in which I discuss ideas to improve or next-step products, write about technical people writing, and ramble about life</description>
    <link>https://productbrief.github.io/</link>
    <atom:link href="https://productbrief.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 09 Apr 2019 11:21:01 -0400</pubDate>
    <lastBuildDate>Tue, 09 Apr 2019 11:21:01 -0400</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>

    
      <item>
        <title>Anatomy of a Good Ticket</title>
        <description>&lt;style&gt;
    table, th, td {
    border-collapse: collapse;
    border: 3px solid #bbdefe;
    padding: 5px;
    margin: 5px;
}
&lt;/style&gt;

&lt;p&gt;&lt;em&gt;tl;dr&lt;/em&gt;: A good ticket is clear, correct, complete, and concise. It uses straightforward grammar, includes background information to aid good decision-making, and sets clear expectations. A good ticket is neither too big nor too small.&lt;/p&gt;

&lt;h1 id=&quot;the-problem&quot;&gt;The Problem&lt;/h1&gt;

&lt;p&gt;Unless you are a single developer writing code to solve your own, individual problem, the people who want the software are not the exact same set as those who make it. As a result, communication is necessary between the set of wanters and the set of makers. And the greater the size of the sets and the less they overlap, the more crucial it is to have clear written communication to avoid wasted effort.&lt;/p&gt;

&lt;h1 id=&quot;the-solution&quot;&gt;The Solution&lt;/h1&gt;

&lt;p&gt;Work requirements usually get broken down into tickets. These tickets can be seen as atomic or, perhaps, as being small molecules.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Good tickets include background information.&lt;/strong&gt; This aids good decision-making by people who come after the original writer. It is often packaged as a &lt;strong&gt;user story&lt;/strong&gt;. A user story explains:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;who will benefit or has a problem that needs to be solved&lt;/li&gt;
  &lt;li&gt;the problem or the desired solution&lt;/li&gt;
  &lt;li&gt;the end goal of the beneficiary&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The format of a user story is usually something like:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;As a (kind of user), I want/need (solution to problem) so that I (experience or result obtained).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With this information, the product development team of designers and engineers can start solving a problem, enabling them to take ownership of the problem and the customer’s pain. Most importantly, it’s formatted in a way that engages their skills and talents, which is why they were hired in the first place.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Four Cs of Good tickets are:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;correct&lt;/strong&gt; - They reflect what is actually wanted, precisely and accurately. The key to this is that the Product Manager (PM) or Product Owner (PO) must work with stakeholders and understand industry standards. In case of uncertainty, a good PM/PO works with a very knowledgeable subset of the product team to arrive at a precise and accurate definition.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;clear&lt;/strong&gt; - They are clear. I recommend running the description portion of tickets through a readability scanner like &lt;a href=&quot;https://www.hemingwayapp.com&quot;&gt;Hemingway App&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;complete&lt;/strong&gt; yet &lt;strong&gt;concise&lt;/strong&gt; - They contain everything the team needs to get started, otherwise they will have to waste time coming back for more information. While writing a ticket, you should cut unnecessary details, attachments, and even words or phrases; otherwise, the ticket quickly becomes a jungle, and key information will get lost in the clutter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If a ticket lacks any of these four Cs, the team will waste time having to reconnect and sort through old notes trying to figure out what was meant and whether it still applies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Good tickets use straightforward grammar.&lt;/strong&gt; This is part of clarity. It is also worth calling out specially. The point of writing a ticket is to make its contents understood. Lots of people unconsciously use unnecessarily long or complicated words and phrases. A common offense is to use words like &lt;em&gt;utilize&lt;/em&gt; rather than &lt;em&gt;use&lt;/em&gt;. The cumulative effect of big words and long sentences is cluttered communication. Avoid jargon that your intended audience is unlikely to know. Every extra or unknown word increases the chance of a reader getting distracted or giving up.&lt;/p&gt;

&lt;p&gt;Run your writing through a readability scanner to see where you can make improvements. Aim for writing at the 7th to 9th grade level so that any adult can read it quickly and comfortably. My favorite scanners:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.readable.io&quot;&gt;Readable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hemingwayapp.com&quot;&gt;Hemingway App&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;A good ticket is not too big or not too small&lt;/strong&gt; It suits the time-frame and team members involved in its execution. Think of an atom or a small molecule, not a rocket ship.&lt;/p&gt;

&lt;h1 id=&quot;a-bad-ticket&quot;&gt;A Bad Ticket&lt;/h1&gt;

&lt;p&gt;Imagine a ticket’s contents broken up into this form.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;form field&lt;/th&gt;
      &lt;th&gt;field contents&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;summary&lt;/td&gt;
      &lt;td&gt;Fix developer portal&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;reporter&lt;/td&gt;
      &lt;td&gt;Ryan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;date created&lt;/td&gt;
      &lt;td&gt;2019-03-29&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team&lt;/td&gt;
      &lt;td&gt;Front End Team&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;current assignee&lt;/td&gt;
      &lt;td&gt;tbd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;status&lt;/td&gt;
      &lt;td&gt;backlog&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;user story&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;acceptance criteria&lt;/td&gt;
      &lt;td&gt;1. The fly-out panel on the left should work. Right now when I click it, nothing happens. When it opens, it obstructs my ability to interact with other controls on the page and this interferes with my workflow preferences. Then I can’t get it to close by clicking the X button.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Definition of Done&lt;/td&gt;
      &lt;td&gt;No bugs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;attachments&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;work log&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;last modified by&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;last modified date&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;There are a few general problems with this ticket:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The summary is vague.&lt;/li&gt;
  &lt;li&gt;The reporter field may not give enough information to help readers contact the writer.&lt;/li&gt;
  &lt;li&gt;Without background information, the Front End Team won’t really know why they’re doing what they’re asked to do.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The acceptance criteria:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;is vague and incomplete. It does not provide clear guidance about what is expected or required.&lt;/li&gt;
  &lt;li&gt;jumbles multiple problems into one ticket.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The definition of done states only the obvious.&lt;/p&gt;

&lt;h1 id=&quot;a-good-ticket&quot;&gt;A Good Ticket&lt;/h1&gt;

&lt;p&gt;Let’s look at the same ticket reworked.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;form field&lt;/th&gt;
      &lt;th&gt;field contents&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;summary&lt;/td&gt;
      &lt;td&gt;Developer portal’s left flyout panel blocks underlying form&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;reporter&lt;/td&gt;
      &lt;td&gt;ryan.haber@mycompany.com&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;date created&lt;/td&gt;
      &lt;td&gt;2019-03-29&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team&lt;/td&gt;
      &lt;td&gt;Front End&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;current assignee&lt;/td&gt;
      &lt;td&gt;tbd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;status&lt;/td&gt;
      &lt;td&gt;backlog&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;user story&lt;/td&gt;
      &lt;td&gt;As an external developer, I need to enter long key values in a form on MyCompany’s developer portal that I retrieve from a flyout panel in the same portal, but this panel covers the controls. So that I can work more accurately, I need to easily enter these values without having to jot them down on paper.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;acceptance criteria&lt;/td&gt;
      &lt;td&gt;1. The panel helps developer-users capture and enter the values in some digital way. E.g.: “copy to clipboard” button or at least a copy-and-paste-able field to hold any values that might need to be recorded by the developer.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;2. The interface makes valid workflow(s) intuitive.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;3. Success is indicated by a 50%+ increase in the rate of form completion over 3 months.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Definition of Done&lt;/td&gt;
      &lt;td&gt;1. Finished build asses all unit and integration.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;2. Finished build accommodates at least 25 concurrent users.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;3. Meets all standards set in MyCompany Base SLA.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;attachments&lt;/td&gt;
      &lt;td&gt;userFeedbackSurveySummary.xlsx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;work log&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;last modified by&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;last modified date&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;What do we see in this revised ticket?&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The summary is clear and complete.&lt;/li&gt;
  &lt;li&gt;Readers will know who to contact with further questions.&lt;/li&gt;
  &lt;li&gt;The user story provides background information that the development team needs to think of a good way to solve the problem.&lt;/li&gt;
  &lt;li&gt;The ticket does not not attempt to micromanage the team, but does provide clear requirements.&lt;/li&gt;
  &lt;li&gt;The ticket has peeled off separate, albeit related, issues for other tickets.&lt;/li&gt;
  &lt;li&gt;Other useful information is attached that may help the team get a sense of what is frustrating users.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you use this approach, you give the development team the information and freedom they need to make intelligent decisions to solve a problem rather than to act like cogs in a machine that needs constant managerial tinkering.&lt;/p&gt;

&lt;h1 id=&quot;conclusion-coordinate---not-dominate&quot;&gt;Conclusion: Coordinate - Not Dominate&lt;/h1&gt;

&lt;p&gt;You wouldn’t want an urban planner telling a civil engineer how to build a new bridge. The urban planner understands what is required, coordinates other moving parts, and makes this information available to the architects and engineers who then develop and implement a safe, economic, and beautiful design to enhance a city and serve its needs.&lt;/p&gt;

&lt;p&gt;Likewise, it is not the role of a product manager, product owner, or business analyst to tell engineers how to do their job. Instead, these product management types should make clear what outcomes the stakeholders need and what constraints the business and its market impose on the situation.&lt;/p&gt;

&lt;p&gt;The atomic unit of organization for the workflow that results is a ticket or issue. A good ticket serves as a point of reference for all involved. When they are well written, managers can arrange them into different to-do lists, epics, user story maps, or any other pattern they like. Managers can assess relative or even actual costs and values for development and then make sound decisions about organization priorities.&lt;/p&gt;

&lt;p&gt;That all starts with a good, clean ticket.&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Apr 2019 00:00:00 -0400</pubDate>
        <link>https://productbrief.github.io/user-story/requirements/writing/2019/04/01/anatomy-of-a-good-ticket.html</link>
        <guid isPermaLink="true">https://productbrief.github.io/user-story/requirements/writing/2019/04/01/anatomy-of-a-good-ticket.html</guid>
        
        
        <category>user-story</category>
        
        <category>requirements</category>
        
        <category>writing</category>
        
      </item>
    
      <item>
        <title>A Personal Thought Experiment</title>
        <description>&lt;p&gt;When I was an undergraduate, a history major, I read a substantial amount. That’s what a history major at Loyola Univerity Maryland amounted to in the late 1990s: a reading, thinking, writing machine. I typically read and digested 200-300 pages per week for each of my seminars. I processed those assignments well enough to write about 10 pages in response to each of them.&lt;/p&gt;

&lt;p&gt;Then my life started to come into regular contact with the internet. Starting in 2007-10, I can see that my life was getting more and more “connected” to the Internet but less and less connected to the habit of sustained, deep reflection and thought. My social life hasn’t suffered. I spend as much time with people as ever and, thanks in part to the Internet, a wider range of acquaintances and friends than ever before both in person and remotely. But my time in contemplation and study has, since at least 2010, lets say, collapsed.&lt;/p&gt;

&lt;p&gt;That has to change. &lt;em&gt;&lt;strong&gt;Now&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;My spiritual directors have always encouraged me to dig back into prayer and meditation. Now I’m also reading Cal Newton’s book &lt;a href=&quot;https://smile.amazon.com/gp/product/1455586692/&quot;&gt;Deep Work: Rules for Focused Success in a Distracted World&lt;/a&gt;. I’m increasingly convinced, convicted even, that I need to make a discipline of spending time in uninterrupted, disconnected study and contemplation of matters but spiritual and worldly. Here I will not go into the spiritual, but I do want to put out to the world this commitment. I hope that by doing so, my towering pride will force me to follow through lest I get teased and chided. Here’s the commitment, to go into effect the day I return home from my present business trip:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Each weekday morning I will wake up 2 hours before the dog, at approximately 5:30 a.m.&lt;/li&gt;
  &lt;li&gt;Each early morning, I will drink a glass of water, do some vigorous exercise, and then settle in for 90 minutes of reading and writing in an analog format: book or maybe a kindle or printouts, pen or pencil, and paper. No LCD screen. No Internet. No phone. I’ll transcribe anything worth sharing.&lt;/li&gt;
  &lt;li&gt;I will spend this morning time in quiet without music, I’m thinking closed in my office where my desk is in the corner facing a wall.&lt;/li&gt;
  &lt;li&gt;Then I will wake the lazy dog up and make him take a walk.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are a lot of things I want to study:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A new programming language (I think Julia, but tbd)&lt;/li&gt;
  &lt;li&gt;Product management and the business of software development&lt;/li&gt;
  &lt;li&gt;Personal finance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m going to do this for the end of October through the end of December, see how it goes, and see what are the fruits. I’ll report back here.&lt;/p&gt;

&lt;p&gt;During this two month experiment, I’m also going to:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Scale back on social media in the way that I do every year at Lent: 1/2 hour on Sundays, blackout the rest of the week.&lt;/li&gt;
  &lt;li&gt;Block personal and work email checking to certain times of the day. I want to think through a schedule before committing to it.&lt;/li&gt;
  &lt;li&gt;Block of web reading to a particular time of day, also TBD.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Naturally, I’ll need to be in bed by 10:00 or so to have a real shot at making this work.&lt;/p&gt;

&lt;p&gt;I also have to figure out what to do about instant messages (my office uses Slack) so that I can be available but also have fewer distractions.&lt;/p&gt;

&lt;p&gt;I could use advice and suggestions, if you please. This is new ground for me. Or maybe it’s old ground for me, that’s gotten overgrown and gone to waste with tree-sized weeds and dense brush.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;Photo by &lt;a href=&quot;https://unsplash.com/photos/hKU5dmGfSKY?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Radu Florin&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/search/photos/thinking?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Oct 2018 00:00:00 -0400</pubDate>
        <link>https://productbrief.github.io/career/philosophy/2018/10/08/a-personal-thought-experiment.html</link>
        <guid isPermaLink="true">https://productbrief.github.io/career/philosophy/2018/10/08/a-personal-thought-experiment.html</guid>
        
        
        <category>career</category>
        
        <category>philosophy</category>
        
      </item>
    
      <item>
        <title>DeveloperHub.io - documentation made easy</title>
        <description>&lt;p&gt;&lt;em&gt;tl;dr&lt;/em&gt;: DeveloperHub.io (&lt;a href=&quot;https://www.developerhub.io&quot;&gt;www.developerhub.io&lt;/a&gt;) is a new product that makes it easy to create documentation in minutes. It’s clean, has core features, and is headed in the right direction.&lt;/p&gt;

&lt;h1 id=&quot;the-product&quot;&gt;the product:&lt;/h1&gt;

&lt;p&gt;DeveloperHub.io is a new documentation product that clearly aims to get you writing and publishing quickly and easily. It succeeds. Within seconds of sitting down at the website, you’ll be creating instantly available documentation. With no need to build, convert, or template your docs, this is SaaS publishing at its easiest.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/ryanhaber/productbrief/content/images/developerhub-wysiwyg.png&quot; alt=&quot;simple wysiwyg editor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;DeveloperHub.io has a simple and intuitive WYSIWYG editor, which means anybody can use it. Adding an image or a code block is as easy as a mouse click. The control panel is simple and reasonably intuitive. As a result, tasks like creating a new version from an existing version are also easy.&lt;/p&gt;

&lt;p&gt;You get basic white-labeling options: you can customize the color scheme, logo, and favicon. Obviously, this customization will not be enough for some enterprises. But for most of us looking to just get up and running, it’s plenty.&lt;/p&gt;

&lt;p&gt;You also get some expected core features that would be required for any enterprise work, even for a small team: you can assign your own DNS to your documentation and you can set permissions for teammates.&lt;/p&gt;

&lt;p&gt;The output is clean and simple.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/ryanhaber/productbrief/content/images/developerhub-output-page.png&quot; alt=&quot;clean and simple output&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can play with the little mini docs demo I made: &lt;a href=&quot;https://api-ambassador.developerhub.io/v1.1/api-ambassador/getting-started&quot;&gt;API Ambassador Demo Docs&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;the-competition&quot;&gt;the competition:&lt;/h1&gt;

&lt;p&gt;DeveloperHub.io is a turnkey SaaS docs portal for small-scale documentation projects. As indicated by the code block feature and, well, the name, this product clearly has an eye toward products that include code samples though it could be used easily for other small documentation projects. Other such products and services include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://clickhelp.com/&quot;&gt;ClickHelp&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://paligo.net/&quot;&gt;Paligo&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.proprofs.com/knowledgebase/&quot;&gt;ProProfs KnowledgeBase&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These products are all SaaS docs portals.&lt;/p&gt;

&lt;p&gt;I distinguish DeveloperHub.io and its competition from products such as &lt;a href=&quot;https://www.adobe.com/products/robohelp.html&quot;&gt;Adobe RoboHelp&lt;/a&gt;, &lt;a href=&quot;https://www.madcapsoftware.com/products/flare/&quot;&gt;Madcap Flare&lt;/a&gt;, and &lt;a href=&quot;https://www.oxygenxml.com/doc/versions/20.1/ug-editor/&quot;&gt;OxygenXML Editor&lt;/a&gt;. The key distinctions are platform, scale, and end product. DeveloperHub.io is SaaS, whereas these products are enterprise installations. DeveloperHub.io helps smaller documentation projects through their life cycle, while these products cope with thousands of documents across multiple projects – it’s overkill with too much overhead for smaller projects. DeveloperHub.io provides a live website as output. Those products support multiple export and output paths.&lt;/p&gt;

&lt;p&gt;In some ways, Paligo is the closest: its UI is perhaps most similar to DeveloperHub.io’s. In reality, though, Paligo is an XML content authoring tool and probably more akin to OxygenXML for practical purposes. Paligo’s key value offering is single-source, multi-channel authoring.&lt;/p&gt;

&lt;p&gt;DeveloperHub.io probably shouldn’t get into multi-channel output at this point. It’s for a developer audience mainly, and for that purpose can stick to the web and really dig into easy web docs authoring. Its team can really get into that fight by adding some single-source magic, which I propose here.&lt;/p&gt;

&lt;h1 id=&quot;add-features&quot;&gt;add features:&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Make formatting controls a bit more obvious.&lt;/strong&gt; It’s probably me. The formatting controls weren’t obvious, but they are there. Once you figure them out or guess, they do make sense, so I’m not sure something better is really possible. Just something for the team to consider.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Snippets and variables for easy single-source writing.&lt;/strong&gt; Writers, like coders, often want to reuse blocks of content. Very often, they want to be able to edit these blocks in one place and have the edits mirrored in the other instances. We usually call thse blocks “snippets”. Variables allow users to insert values like current year that are updated at build or display time. Both snippets and variables are a common approach to keeping content fresh and consistent. For either snippets or variables, the team will need to pay careful attention to how styling is applied: whether from the source, the referring location, or some cascading approach.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Internal references.&lt;/strong&gt; It would be great to have hyperlinks within the documentation automatically updated in the event that a page’s URL or name changes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Swagger integration.&lt;/strong&gt; The dream here is a fancy and configurable UI for OpenAPI/Swagger documentation built into the product. The API reference could be a stand-alone page or it could be inserted into existing docs. The ability to directly edit the HTML of a page would provide a short-term or less-dreamy approach to this enhancement.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Additional customizations.&lt;/strong&gt; Some clients will want a landing page that they can more fully or totally control. Generally speaking, it will also be useful to allow an HTML view of any particular content page as well, though probably within the existing template. Writers may want this view so they can code tables, set internal anchors, etc. The ability to inject CSS and JavaScript may also be helpful to many users.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;monetize-it&quot;&gt;monetize it:&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Add a basic tier of free use with the product scaling along with customers’ needs and ability to pay.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The DeveloperHub.io team could charge for: additional users, additional customizations, additional plugins, and bulk import/export or maybe import/export at a data level.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add a service to supply and charge for: an embeddable HTML element with supporting CSS/JavaScript that does a quick, autocomplete/suggested-completion query of the documentation. Content developers can embed such an element in, among other places, customer support request pages.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;scale-it&quot;&gt;scale it:&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Get the word out at technical writing trade shows, associations, and forums.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 22 Jul 2018 00:00:00 -0400</pubDate>
        <link>https://productbrief.github.io/brief/docs-tools/2018/07/22/developer-hub.html</link>
        <guid isPermaLink="true">https://productbrief.github.io/brief/docs-tools/2018/07/22/developer-hub.html</guid>
        
        
        <category>brief</category>
        
        <category>docs-tools</category>
        
      </item>
    
      <item>
        <title>Making Things Clear</title>
        <description>&lt;p&gt;I came across this list in Forbes and really like it a lot. It matches my experience very well and has got me thinking.&lt;/p&gt;

&lt;p&gt;First, the list: &lt;a href=&quot;http://www3.forbes.com/leadership/ten-reasons-successful-people-change-jobs-more-often/&quot;&gt;Forbes’s 10 Reasons Successful People Change Jobs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now for my thoughts, building off the list from Forbes.&lt;/p&gt;

&lt;p&gt;The list closely represents my experience.&lt;/p&gt;

&lt;p&gt;From 2009 to 2015, I doubled and then tripled my salary and gained a host of marketable skills and even some expertise by changing jobs enough to raise the eyebrows of every stability-minded person who knows and loves me. During those years, I had four full-time employers and also spent time freelancing. Grandmaternal eyebrow-raising has definitely accompanied my journey.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;https://s3.amazonaws.com/ryanhaber/productbrief/content/images/ladder.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here’s the thing. If you see a career as climbing a corporate ladder, you may be making a mistake. Corporations aren’t really ladders with a single path and a line of people all steadily advancing each in their turn. Really, corporations are more like pyramids with lots of workers, fewer middle managers, even fewer executives, and a single owner or board or CEO or whoever sits atop the whole thing at your company. And the point is that unless the corporation is growing rapidly, someone usually has to die, retire, or leave for a job above you for the position to open up. Taking for granting that the only way to advance your career is to climb the pyramid implies that you only go forward by growing from doing work to managing people who do work. That’s not true.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;https://s3.amazonaws.com/ryanhaber/productbrief/content/images/lillypads.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don’t just see the corporation where I work. I see the whole labor market for my industry, my profession, and for related industries and professions. I see them all as forming a big pond with lilypads and stones and islands. I step from rock to shallow spot as useful or necessary and I always have all kinds of directions open to me. More more stability-minded friends are amazed or amused, but it doesn’t even give pause to the recruiters who track me down on a regular basis asking if I’d like to make a change. (I love my current employer, am learning tons, and have lots so of potential for career growth without shifting jobs, so I’m probably not looking to shift at the moment, but you can always ask.)&lt;/p&gt;

&lt;p&gt;As for changing positions frequently:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Employers big and small lay off employees when they cannot afford to pay for or have no use for the employees’ work anymore. It makes sense for employees to change employers when we have no use for or can do better than the employer’s work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Employers big and small lay off employees regularly when they think they can find someone to do the same work for less. It makes sense for workers to leave employers when we think we can get paid more to do the same work elsewhere.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Employers big or small eventually sack employees who are fractious and unpleasant to work with. It makes sense to leave a toxic employer rather than suck it up.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Incidentally, it’s a false feeling that large employers provide more stability than small ones, even if stability’s your thing. Large companies buy out, get bought out, go bankrupt, lay off workers to keep up the bottom line, and all the rest of it, all the time.&lt;/p&gt;

&lt;p&gt;It’s a relatively simple thing: sometimes you really have learned all you are going to learn at a job. Sometimes you really can get more money for the same work, and you know because you see the job listings or because recruiters approach you and tell you. Sometimes you find yourself working three months in a toxic environment and the idea of “sticking it out” for another three or four years (so you look stable) is miserable. To me, these are all signs that it’s time to split. Split gracefully, by all means, burning no bridges if can be managed, and waiting until something better is lined up if at all possible. But still: go.&lt;/p&gt;

&lt;p&gt;Valuing stability is fine. Stable communities are good, and stability in family life is key. I have a few friends that have been my friends for thirty or more years. But if you make stability paramount in your career, though, don’t be surprised if you stagnate in your career. Stagnation is what happens when living things become too stable.&lt;/p&gt;

&lt;p&gt;In some professions, like teaching, in which stability really is valued and there isn’t really a career ladder or pyramid or whatever if you want to continue teaching, my experience probably doesn’t match up well with yours. But in my industry (software development) and in others that value dynamism, like defense industries, finance, marketing, creative/design work, and more, I think you probably find many experiences that corroborate mine.&lt;/p&gt;

&lt;p&gt;Just my $0.02, for what it’s worth, though I have to admit that I’m glad Mr. Forbes agrees with me. He seems to have done OK.&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Jul 2017 00:00:00 -0400</pubDate>
        <link>https://productbrief.github.io/career/2017/07/22/making-things-clear.html</link>
        <guid isPermaLink="true">https://productbrief.github.io/career/2017/07/22/making-things-clear.html</guid>
        
        
        <category>career</category>
        
      </item>
    
      <item>
        <title>I Never Meant to Be a Technical Writer</title>
        <description>&lt;p&gt;I never meant to be a technical writer, or whatever it is that I now do for a living. Whatever it is, I really like it, though. My career has had its ups and downs, and if there is such a thing as a normal career, mine is not it. Probably the most un-normal thing about my career, though, is how it got started.&lt;/p&gt;

&lt;p&gt;My career started over a jelly doughnut. After leaving the seminary where I had spent a few years studying for the Catholic priesthood, I went on a brief vacation to Europe to unwind. When I returned, I had to get about the business of finding a job. Or something. I hadn’t even really begun yet when there I was, standing around in my parish’s hall eating the jelly doughnut. A man I knew, Paul, came up and started chatting me up. “How’s your transition going?” “Went to Europe, did you? How was that?” Answering the questions and keeping up conversation was made challenging because my jelly doughnut was beginning to ooze like a puppy poking its nose through a gap between a door and the jamb. “You have work yet?”&lt;/p&gt;

&lt;p&gt;“Um, well, not just yet.” A blob of jelly escaped its confines and plopped onto my shoe. I played it off, but Paul glanced down at my shoe.&lt;/p&gt;

&lt;p&gt;“Well, what can you do?” Paul asked. The answer to this question was vaguer than you’d expect unless you know that my only university degree is a bachelor of arts from a liberal arts college. I studied history.&lt;/p&gt;

&lt;p&gt;“Well, I can study,” I said unconvincingly.&lt;/p&gt;

&lt;p&gt;“Study? That’s good,” Paul responded, unconvinced.&lt;/p&gt;

&lt;p&gt;“Research. I learn quickly.”&lt;/p&gt;

&lt;p&gt;“I see.”&lt;/p&gt;

&lt;p&gt;Then, as an afterthought, I added, “I can write.”&lt;/p&gt;

&lt;p&gt;At this, Paul’s eyes lit up. “You can write?” he repeated. His hushed tone was more appropriate to a great discovery: “You found gold?”&lt;/p&gt;

&lt;p&gt;“You mean English, right?”&lt;/p&gt;

&lt;p&gt;“Yes, English. You can write English?”&lt;/p&gt;

&lt;p&gt;“Um, yes. Can’t everybody?”&lt;/p&gt;

&lt;p&gt;Paul chuckled. “Heh. Not where I work, man. Say, listen, what are you doing Monday?”&lt;/p&gt;

&lt;p&gt;I was caught up on the bit about English, so it took me a second to respond, and when I did, my response, “Well, I’m not working,” sounded a bit more petulant than was quite right.&lt;/p&gt;

&lt;p&gt;“Why don’t you come into my office? I think we’re trying to hire a technical writer. Very difficult to find a good one, you know. Why don’t you come in, look around, and you can talk with the right people there.”&lt;/p&gt;

&lt;p&gt;I was intrigued by the thought of eating and getting my own place to stay. Still, there was this nagging concern. Had he said “technical writer”? I thought I’d been pretty clear that English was my thing. Not technical. Whatever that would mean. Still, food is food, and worth a shot. “Um, sure. So, um, technical writing?”&lt;/p&gt;

&lt;p&gt;“Yeah. Technical writing. You think you can do it?”&lt;/p&gt;

&lt;p&gt;“We’re still talking about English, right?”&lt;/p&gt;

&lt;p&gt;“Yes. Well, computer software. In English.”&lt;/p&gt;

&lt;p&gt;“Yeah,” I said, about as convincingly as I sounded when I told him that I could study. “For sure.”&lt;/p&gt;

&lt;p&gt;“Great,” he said. He gave me his card with the office’s address and then, looking around nervously, said to nobody in particular, “I think one of my kids is setting fire to something or poking somebody. I’d better…” and he went.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;https://s3.amazonaws.com/ryanhaber/productbrief/content/images/microsoft-manual-of-style-original-imadaqnxubcthhtg.jpg&quot; style=&quot;width:300px;margin-right: auto; margin-left: auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Meanwhile, I turned on my heel, returned to my sister and brother-in-law’s where I was staying, temporarily I hoped, and started looking around on his bookshelves. This all happened when books were still a thing but were becoming a not-a-thing, at least in my industry. My brother-in-law works in IT, and I thought I had seen a dull-looking but suddenly relevant book on his shelf. And there it was: the Microsoft Manual of Style. Also present were a number of user manuals to various software applications. I spent the rest of the day studying their style and trying to figure out what technical writing might mean.&lt;/p&gt;

&lt;p&gt;When Monday came around, I went into the office at the address that Paul had given me. The receptionist showed me to Paul, and Paul brought me to a room with a computer. A man about my age, an engineer as it turned out, joined us and began to walk me through a software suite as Paul narrated very eagerly, very proudly. The software had a clunky user interface that masked something really cool: software for managing multiple security appliances of varying types, makes, and models in a single platform. It doesn’t sound revolutionary, but when network video recorders were just coming onto the scene, it was pretty new stuff.&lt;/p&gt;

&lt;p&gt;“What do you need me to write, Paul?”&lt;/p&gt;

&lt;p&gt;“Well, anything, really.”&lt;/p&gt;

&lt;p&gt;“Anything?”&lt;/p&gt;

&lt;p&gt;“Yeah, we don’t have any documentation yet. Pick something that needs documenting, and document it.”&lt;/p&gt;

&lt;p&gt;So document I did. I found a spot of the interface that looked particularly unwieldy apparently intended to complicate a task that could have been simple and was certainly important. I wrote up a set of step-by-step instructions for “Doing Such-and-Such.” I took great care to clearly call out informational notes separate from the various steps to be done. When I’d finished, I showed my work to Paul. “Very good. Very clear. Except…”&lt;/p&gt;

&lt;p&gt;“Except?”&lt;/p&gt;

&lt;p&gt;“Can you add more pictures?” he asked.&lt;/p&gt;

&lt;p&gt;I hadn’t expected pictures. I could do pictures. After fiddling with the print screen button, I added some pictures.&lt;/p&gt;

&lt;p&gt;“Beautiful. You’re hired.”&lt;/p&gt;

&lt;p&gt;So that’s how I got started technical writing. How I got to where I am is another installment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Life Skills Takeaway&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Most new jobs are made by small businesses.&lt;/li&gt;
  &lt;li&gt;Small businesses are more likely than large businesses to hire someone based on potential as much as on experience.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 17 Jun 2017 00:00:00 -0400</pubDate>
        <link>https://productbrief.github.io/career/2017/06/17/i-never-meant-to-be-a-technical-writer.html</link>
        <guid isPermaLink="true">https://productbrief.github.io/career/2017/06/17/i-never-meant-to-be-a-technical-writer.html</guid>
        
        
        <category>career</category>
        
      </item>
    
      <item>
        <title>Resources to Learn Tech Writing</title>
        <description>&lt;p&gt;I am frequently asked, “What are some good places to learn technical writing?” This page will be an evolving document listing off forums, organizations, and even books (gasp!) that have helped me improve my game. I may include some that look excellent even if they haven’t been pivotal in my particular career.&lt;/p&gt;

&lt;h2 id=&quot;books-and-online-guides&quot;&gt;Books and Online Guides&lt;/h2&gt;

&lt;h4 id=&quot;english-and-tech-comms-usage&quot;&gt;English and Tech Comms Usage&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.chicagomanualofstyle.org/home.html&quot;&gt;Chicago Manual of Style&lt;/a&gt; online, or &lt;a href=&quot;https://www.amazon.com/Chicago-Manual-Style-16th/dp/0226104206&quot;&gt;buy a copy&lt;/a&gt; to settle all questions about grammar and usage.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Elements-Style-Fourth-William-Strunk/dp/020530902X/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1497131988&amp;amp;sr=1-1&amp;amp;keywords=elements+of+style+strunk+and+white&quot;&gt;The Elements of Style&lt;/a&gt;, because it’s inexpensive, brief, and an excellent guide to how to write clean and simple prose. If you haven’t read it, you probably stink at writing. Just kidding. Kind of.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Complete-Plain-Words-Ernest-Gowers/dp/1567922031/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1497132032&amp;amp;sr=1-1&amp;amp;keywords=complete+plain+words&quot;&gt;The Complete Plain Words&lt;/a&gt;, basically a longer form of &lt;em&gt;The Elements of Style&lt;/em&gt; and - I’m not joking - good for daily reading. It teaches more about a mentality than about memorizing rules.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://smile.amazon.com/Point-Dictionary-Concise-Writing/dp/0393347176/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1497132167&amp;amp;sr=1-1&amp;amp;keywords=to+the+point+a+dictionary+of+concise+writing&quot;&gt;To The Point: A Dictionary of Concise Writing&lt;/a&gt;. You look up a phrase and this nifty book provides a briefer alternative. I use it when I am sensing my inner poet taking control of my tech comms work. The more you use it, the less you need to.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Microsoft-Manual-Style-4th-Corporation/dp/0735648719/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1497131810&amp;amp;sr=1-1&amp;amp;keywords=microsoft+manual+of+style+5th+edition&quot;&gt;Microsoft Manual of Style&lt;/a&gt; for all language more specific to software documentation as well as formatting usage.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;feedback-on-your-writing&quot;&gt;Feedback on Your Writing&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;a href=&quot;http://www.hemingwayapp.com/&quot;&gt;Hemingway App&lt;/a&gt; is geared toward improving your writing. Generally, it seems to score with an eye toward helping you write very clean, active prose more or less suitable for tech writing. It gives lots of generally good advice about writing good, clean prose.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/content/images/2017/06/logo.io.png&quot;&gt;Readable.io&lt;/a&gt; evaluates text giving you a variety of scores based on different academic scales that I don’t understand. But what I do understand is the simple letter grade that it gives. It also gives you some statistical feedback, such as the percentage of your words that are adverbs.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;the-craft-of-tech-comms&quot;&gt;The Craft of Tech Comms&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://smile.amazon.com/Developing-Quality-Technical-Information-Handbook/dp/0133118975/ref=mt_paperback?_encoding=UTF8&amp;amp;me=&quot;&gt;Developing Quality Technical Information&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/B01A2QL9SS/ref=kinw_myk_ro_title&quot;&gt;Modern Technical Writing&lt;/a&gt; focuses on software documentation and is a gem of a book.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://ben1962hummel.files.wordpress.com/2017/04/white_paper-the_definitive_guide_to_creating_api_documentation.pdf&quot;&gt;The Definitive Guide to
Creating API Documentation&lt;/a&gt; by the folks from Madcap Flare, an industry standard for technical writing.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;organizations&quot;&gt;Organizations&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.stc.org/&quot;&gt;Society for Technical Communications&lt;/a&gt; is a real-life organization to help tech comms people network and improve our craft. The society produces salary guides, a peer-reviewed journal as well as an online magazine, and lots of activities and an annual conference. Disclaimer: I’m a member. Warning: it’s not cheap. Advice: I do find it worthwhile or I wouldn’t keep renewing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.writethedocs.org&quot;&gt;Write the Docs&lt;/a&gt; From their website: “Write the Docs is a series of conferences and local meetups focused on all things related to software documentation… We consider everyone who cares about communication, documentation, and their users to be a member of our community. This can be programmers, tech writers, developer advocates, customer support, marketers, and anyone else who wants people to have great experiences with software.”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.meetup.com/InfoDevDC/&quot;&gt;InfoDevDC&lt;/a&gt; is a nifty meetup in Northern Virgina. Disclaimer: I co-run the thing. Advice: It’s still pretty darn nifty.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;forums-online&quot;&gt;Forums Online&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/groups/3709151&quot;&gt;LinkedIn - API Docs&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/groups/112571&quot;&gt;LinkedIn - Technical Writer Forum&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/technicalwriting/&quot;&gt;Reddit - Technical Writing&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 10 Jun 2017 00:00:00 -0400</pubDate>
        <link>https://productbrief.github.io/writing/2017/06/10/resources-to-learn-tech-writing.html</link>
        <guid isPermaLink="true">https://productbrief.github.io/writing/2017/06/10/resources-to-learn-tech-writing.html</guid>
        
        
        <category>writing</category>
        
      </item>
    

  </channel>
</rss>
